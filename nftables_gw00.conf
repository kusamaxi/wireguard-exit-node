#!/usr/sbin/nft -f
flush ruleset

define pub_iface = "eth0"
define wg_iface = "rotkonet"
define wg_port = 51820
define ssh = 22

table netdev drop-bad-packets {
    chain ingress {
        # drop tcp "xmas" packets (bad flag combo)
        tcp flags fin,psh,urg / fin,psh,urg drop
        # drop tcp packets with no flags
        tcp flags ! fin,syn,rst,psh,ack,urg drop
        # drop tcp packets with mss below minimum
        tcp flags syn tcp option maxseg size 1-535 drop
    }

    chain ingress-eth0 {
        type filter hook ingress device $pub_iface priority -450; policy accept;
        goto ingress
    }
}
table inet drop-bad-ct-states {
    chain prerouting {
        type filter hook prerouting priority -150; policy accept;

        # drop packets in "invalid" connection-tracking state
        ct state invalid drop
        # drop tcp packets for new connections that aren't syn packets
        ct state new tcp flags != syn / fin,syn,rst,ack drop
        # drop new connections over rate limit
        ct state new limit rate over 1/second burst 10 packets drop
    }
}
table inet filter {
    chain input {
        type filter hook input priority 0; policy drop;

        # accept all loopback packets
        iif "lo" accept
        # accept all icmp/icmpv6 packets
        meta l4proto { icmp, ipv6-icmp } accept
        # accept all packets that are part of an already-established connection
        ct state established,related accept

        # accept all DHCPv6 packets received at a link-local address
        ip6 daddr fe80::/64 udp dport dhcpv6-client accept
        # accept all SSH packets received on a public interface
        iif $pub_iface tcp dport ssh accept
        # accept all SSH packets received on a wireguard interface
        iif $wg_iface tcp dport ssh accept
        # accept all WireGuard packets received on a public interface
        iif $pub_iface udp dport $wg_port accept
        # accept traffic to wireguard
        iif $pub_iface tcp dport $wg_port accept

        # reject with polite "port unreachable" icmp response
        reject
    }

    chain forward {
        type filter hook forward priority 0; policy drop;
        # forwards
        iif $wg_iface tcp dport 20711 accept
        iif $wg_iface tcp dport 20712 accept
        iif $wg_iface tcp dport 20721 accept
        iif $wg_iface tcp dport 20722 accept
        iif $wg_iface tcp dport 33311 accept
        iif $wg_iface tcp dport 33312 accept
        iifname $wg_iface oifname $wg_iface goto wg-forward
        # forwards end 
        reject with icmpx type host-unreachable
    }
    chain wg-forward {
        # forward all icmp/icmpv6 packets
        meta l4proto { icmp, ipv6-icmp } accept
        # forward all packets that are part of an already-established connection
        ct state established,related accept

        # forward all SSH packets to innernet
        ip daddr 10.42.1.1 tcp dport 20711 accept
        ip daddr 10.42.1.2 tcp dport 20712 accept
        ip daddr 10.42.2.1 tcp dport 20721 accept
        ip daddr 10.42.2.2 tcp dport 20722 accept
        
        # forward all p2p for polkadot
        ip daddr 10.42.1.1 tcp dport 33311 accept
        ip daddr 10.42.1.2 tcp dport 33312 accept

        # reject with polite "administratively prohibited" icmp response
        reject with icmpx type admin-prohibited
      }
}
